name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: dovieuu/microbook-maker
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if tag is on the master branch
        id: check_branch
        run: |
          if git branch -r --contains ${{ github.ref_name }} | grep -qw "origin/master"; then
            echo "is_master=true" >> $GITHUB_OUTPUT
          else
            echo "is_master=false" >> $GITHUB_OUTPUT
            echo "‚ùå Tag is not on the master branch. Skipping the rest of the job."
          fi

      - name: Set up Docker Buildx
        if: steps.check_branch.outputs.is_master == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: steps.check_branch.outputs.is_master == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        if: steps.check_branch.outputs.is_master == 'true'
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=true

      - name: Build and push Docker image
        id: build
        if: steps.check_branch.outputs.is_master == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.production
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Image digest
        if: steps.check_branch.outputs.is_master == 'true'
        run: echo ${{ steps.build.outputs.digest }}